# Production Docker Compose Configuration
# Optimized for XSBH distribution with enhanced security and performance
version: '3.8'

services:
  nginx:
    image: nginx:alpine
    container_name: xsbh-nginx-prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx.prod.conf:/etc/nginx/nginx.conf:ro
      - ./docker/ssl:/etc/nginx/ssl:ro
      - static_assets:/usr/share/nginx/html/static
    depends_on:
      - frontend
      - backend
    restart: unless-stopped
    networks:
      - xsbh-network
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: frontend-prod
    container_name: xsbh-frontend-prod
    volumes:
      - static_assets:/app/dist
    restart: unless-stopped
    networks:
      - xsbh-network
    environment:
      - NODE_ENV=production
      - VITE_API_BASE_URL=https://api.yourdomain.com
      - VITE_ENVIRONMENT=production
    healthcheck:
      test: ["CMD", "ls", "/app/dist/index.html"]
      interval: 30s
      timeout: 10s
      retries: 3

  backend:
    build:
      context: .
      dockerfile: Dockerfile.prod
      target: backend-prod
    container_name: xsbh-backend-prod
    expose:
      - "5000"
    volumes:
      - ./data:/app/data:ro
      - upload_storage:/app/uploads
      - ./logs:/app/logs
    restart: unless-stopped
    networks:
      - xsbh-network
    environment:
      - FLASK_ENV=production
      - FLASK_DEBUG=0
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
      - MAX_CONTENT_LENGTH=100MB
      - CORS_ORIGINS=https://yourdomain.com
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:5000/health', timeout=5)"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  redis:
    image: redis:7-alpine
    container_name: xsbh-redis-prod
    restart: unless-stopped
    networks:
      - xsbh-network
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  static_assets:
    driver: local
  upload_storage:
    driver: local
  redis_data:
    driver: local

networks:
  xsbh-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
